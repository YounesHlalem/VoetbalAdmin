// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VoetbalAdmin.DAL;

namespace VoetbalAdmin.DAL.Migrations
{
    [DbContext(typeof(VoetbalAdminDBContext))]
    partial class VoetbalAdminDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VoetbalAdmin.DAL.Entities.Geslacht", b =>
                {
                    b.Property<int>("GeslachtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("GeslachtId");

                    b.HasIndex("Naam")
                        .IsUnique();

                    b.ToTable("Geslacht");

                    b.HasData(
                        new
                        {
                            GeslachtId = 1,
                            Naam = "Man"
                        },
                        new
                        {
                            GeslachtId = 2,
                            Naam = "Vrouw"
                        });
                });

            modelBuilder.Entity("VoetbalAdmin.DAL.Entities.Lid", b =>
                {
                    b.Property<int>("LidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("varchar(70)")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("BondsNr")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("Geboortedatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeslachtId")
                        .HasColumnType("int");

                    b.Property<bool>("IsGearchiveerd")
                        .HasColumnType("bit");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("Stad")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("TelefoonNr")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("LidId");

                    b.HasIndex("BondsNr")
                        .IsUnique();

                    b.HasIndex("GeslachtId");

                    b.HasIndex("TeamId");

                    b.HasIndex("BondsNr", "TeamId", "Voornaam", "Naam", "GeslachtId", "Geboortedatum", "Postcode", "Stad", "Adres", "TelefoonNr", "IsGearchiveerd");

                    b.ToTable("Lid");
                });

            modelBuilder.Entity("VoetbalAdmin.DAL.Entities.LidRol", b =>
                {
                    b.Property<int>("LidRolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Begindatum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Einddatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("LidId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("LidRolId");

                    b.HasIndex("RolId");

                    b.HasIndex("LidId", "RolId", "Begindatum", "Einddatum");

                    b.ToTable("LidRol");
                });

            modelBuilder.Entity("VoetbalAdmin.DAL.Entities.Reeks", b =>
                {
                    b.Property<int>("ReeksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<int>("SeizoenId")
                        .HasColumnType("int");

                    b.HasKey("ReeksId");

                    b.HasIndex("Naam")
                        .IsUnique();

                    b.HasIndex("SeizoenId");

                    b.ToTable("Reeks");
                });

            modelBuilder.Entity("VoetbalAdmin.DAL.Entities.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("RolId");

                    b.HasIndex("Naam")
                        .IsUnique();

                    b.ToTable("Rol");

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            Naam = "Voorzitter"
                        },
                        new
                        {
                            RolId = 2,
                            Naam = "Bestuurslid"
                        },
                        new
                        {
                            RolId = 3,
                            Naam = "Secretaris"
                        },
                        new
                        {
                            RolId = 4,
                            Naam = "Penningmeester"
                        },
                        new
                        {
                            RolId = 5,
                            Naam = "Jeugdcoördinator"
                        },
                        new
                        {
                            RolId = 6,
                            Naam = "Speler"
                        });
                });

            modelBuilder.Entity("VoetbalAdmin.DAL.Entities.Seizoen", b =>
                {
                    b.Property<int>("SeizoenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Begindatum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Einddatum")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActief")
                        .HasColumnType("bit");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.HasKey("SeizoenId");

                    b.HasIndex("Naam")
                        .IsUnique();

                    b.ToTable("Seizoen");
                });

            modelBuilder.Entity("VoetbalAdmin.DAL.Entities.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Einddatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.HasKey("TeamId");

                    b.HasIndex("Naam")
                        .IsUnique();

                    b.ToTable("Team");
                });

            modelBuilder.Entity("VoetbalAdmin.DAL.Entities.Wedstrijd", b =>
                {
                    b.Property<int>("WedstrijdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ReeksId")
                        .HasColumnType("int");

                    b.Property<int>("TeamThuisId")
                        .HasColumnType("int");

                    b.Property<int>("TeamUitId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Wedstrijddatum")
                        .HasColumnType("datetime2");

                    b.HasKey("WedstrijdId");

                    b.HasIndex("ReeksId");

                    b.HasIndex("TeamUitId");

                    b.HasIndex("TeamThuisId", "TeamUitId", "Wedstrijddatum", "ReeksId");

                    b.ToTable("Wedstrijd");
                });

            modelBuilder.Entity("VoetbalAdmin.DAL.Entities.WedstrijdResultaat", b =>
                {
                    b.Property<int>("WedstrijdResultaatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ScoreThuis")
                        .HasColumnType("int");

                    b.Property<int>("ScoreUit")
                        .HasColumnType("int");

                    b.Property<int>("WedstrijdId")
                        .HasColumnType("int");

                    b.HasKey("WedstrijdResultaatId");

                    b.HasIndex("WedstrijdId")
                        .IsUnique();

                    b.HasIndex("WedstrijdId", "ScoreUit", "ScoreThuis");

                    b.ToTable("WedstrijdResultaat");
                });

            modelBuilder.Entity("VoetbalAdmin.DAL.Entities.Lid", b =>
                {
                    b.HasOne("VoetbalAdmin.DAL.Entities.Geslacht", "Geslacht")
                        .WithMany()
                        .HasForeignKey("GeslachtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoetbalAdmin.DAL.Entities.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoetbalAdmin.DAL.Entities.LidRol", b =>
                {
                    b.HasOne("VoetbalAdmin.DAL.Entities.Lid", "Lid")
                        .WithMany()
                        .HasForeignKey("LidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoetbalAdmin.DAL.Entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoetbalAdmin.DAL.Entities.Reeks", b =>
                {
                    b.HasOne("VoetbalAdmin.DAL.Entities.Seizoen", "Seizoen")
                        .WithMany()
                        .HasForeignKey("SeizoenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoetbalAdmin.DAL.Entities.Wedstrijd", b =>
                {
                    b.HasOne("VoetbalAdmin.DAL.Entities.Reeks", "Reeks")
                        .WithMany()
                        .HasForeignKey("ReeksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoetbalAdmin.DAL.Entities.Team", "TeamThuis")
                        .WithMany()
                        .HasForeignKey("TeamThuisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoetbalAdmin.DAL.Entities.Team", "TeamUit")
                        .WithMany()
                        .HasForeignKey("TeamUitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoetbalAdmin.DAL.Entities.WedstrijdResultaat", b =>
                {
                    b.HasOne("VoetbalAdmin.DAL.Entities.Wedstrijd", "Wedstrijd")
                        .WithMany()
                        .HasForeignKey("WedstrijdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
